<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on James Hughes</title><link>/posts/</link><description>Recent content in Posts on James Hughes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â©2020 James Hughes.</copyright><lastBuildDate>Wed, 01 Jan 2020 00:49:30 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>NASA has an API!</title><link>/nasa-has-an-api/</link><pubDate>Wed, 01 Jan 2020 00:49:30 +0000</pubDate><guid>/nasa-has-an-api/</guid><description>This started as an article on me learning Vue.js
As I was going through the motions of the annoying and overdone TODO application to learn a JS library, I decided to do a quick scour of the internet for a public API that might jazz things up a bit. After finding a few cat and meme generators, I stumbled across this gem!
https://api.nasa.gov/
That&amp;rsquo;s right - NASA has a public API.</description></item><item><title>Angular + ESRI = Not bad</title><link>/angular-esri-not-bad/</link><pubDate>Fri, 06 Sep 2019 09:33:18 +0000</pubDate><guid>/angular-esri-not-bad/</guid><description>There&amp;rsquo;s no question that I&amp;rsquo;m an ng fanboy.
React&amp;rsquo;s willy nilly do whatever you want attitude doesn&amp;rsquo;t do much for me.
Vue is basically react. Let&amp;rsquo;s be serious.
I like the clear separation of my HTML, CSS, TS, and unit tests. That won&amp;rsquo;t ever go away. Work has taken me into some new territories where I didn&amp;rsquo;t think I&amp;rsquo;d have as much fun as I am. That&amp;rsquo;s enough of my ranting about javascript frameworks.</description></item><item><title>ArcGIS Upgrade Error 28809</title><link>/arcgis-upgrade/</link><pubDate>Sat, 15 Jun 2019 00:45:00 +0000</pubDate><guid>/arcgis-upgrade/</guid><description>I was upgrading ArcGIS Server (10.6.1 -&amp;gt; 10.7) the other day&amp;hellip;
We encountered an issue with the account ArcGIS was using to run itself - the LocalSystem account. We don&amp;rsquo;t have passwords for it, so the installer would not let us proceed. We couldn&amp;rsquo;t change the user either which posed a bit of an issue so we decided to just cancel our install and proceed along our merry way.
So we turned our ArcGIS Server service back on and gave it a few minutes to spin back up however it never did!</description></item><item><title>Benchmarking a pi calculation for fun</title><link>/benchmarking-a-pi-calculation-for-fun/</link><pubDate>Wed, 22 May 2019 09:51:39 +0000</pubDate><guid>/benchmarking-a-pi-calculation-for-fun/</guid><description>Dotnet Core, Golang, Node, C, Java, Python.
This is what I felt like doing on a Tuesday night after seeing yet another article discussing the performance of dotnet core over node.js. As is typical when things like these arise, our team&amp;rsquo;s slack channel went into the lightest of debates about C# vs Node, compiled speeds vs interpreted languages, and finally back to what we were originally discussing - &amp;ldquo;Do you think cypress would be faster than selenium?</description></item><item><title>IndexedDB + React for Offline Storage</title><link>/indexeddb-react/</link><pubDate>Wed, 09 Jan 2019 13:07:23 +0000</pubDate><guid>/indexeddb-react/</guid><description>Offline data is annoying.
I&amp;rsquo;m used to storing data in localstorage which is okay&amp;hellip; sometimes. When you have a small amount of data to store such as user settings or persisting filters between views then this is a decent enough solution. I was working on a project recently that had a wild requirement appear where we needed to store upwards of 10k items offline. Needless to say, this put performance problems in our application.</description></item><item><title>Brainteasers - they're important!</title><link>/brainteasers-theyre-important/</link><pubDate>Tue, 13 Nov 2018 10:47:10 +0000</pubDate><guid>/brainteasers-theyre-important/</guid><description>48 days ago I signed up for https://www.dailycodingproblem.com/
I haven&amp;rsquo;t completed all 48 problems however the ones that I have completed, I&amp;rsquo;ve had a blast with. It bring back a challenge that&amp;rsquo;s been missing - not that my work and personal life don&amp;rsquo;t have their own challenges. It brings me back to basics and gets me thinking again on algorithm design and optimization of code.
Much of my development work (which is less and less these days) is done using a framework of some sort which puts a layer of &amp;lsquo;magic&amp;rsquo; on top of the coding experience.</description></item><item><title>Go - Micro-services and Embedded Databases [Part 2]</title><link>/go-micro-services-and-embedded-databases-part-2/</link><pubDate>Mon, 24 Sep 2018 09:51:32 +0000</pubDate><guid>/go-micro-services-and-embedded-databases-part-2/</guid><description>If you haven&amp;rsquo;t already, check out Part 1[!]
First things first - let&amp;rsquo;s make these responses something machine readable instead of just some plain text! That&amp;rsquo;s a nice and easy way to dive back into the code!
We are going to create 2 new structs in the router.go file to declare how the app is going to return Errors and Standard responses.
package main // ... type ApiErrorResponse struct { Error string `json:&amp;#34;error&amp;#34;` } type ApiStandardResponse struct { Payload interface{} `json:&amp;#34;payload&amp;#34;` } This is menial, but it helps our responses have a bit more structure.</description></item><item><title>Go - Micro-services and Embedded Databases [Part 1]</title><link>/go-micro-services-and-embedded-databases/</link><pubDate>Wed, 19 Sep 2018 06:30:15 +0000</pubDate><guid>/go-micro-services-and-embedded-databases/</guid><description>This is fun!
FYI - If you&amp;rsquo;re looking for Part 2, it&amp;rsquo;s here[.]
I&amp;rsquo;ve been meaning to learn a few of the things I&amp;rsquo;m going to go over in this post. Firstly, I want to make an actual useful application using Go. I want it to be run as a microservice with it&amp;rsquo;s own database. Instead of putting it in a docker container, I want to just use an embedded database that the executable can use.</description></item><item><title>Fetching data with react</title><link>/fetching-data-with-react/</link><pubDate>Wed, 29 Aug 2018 02:37:01 +0000</pubDate><guid>/fetching-data-with-react/</guid><description>What use is an app that can&amp;rsquo;t persist data?
I&amp;rsquo;m continuing this from my previous post about my efforts to learn about react. I want to be able to persist my data on a server and display it on a web client. To my understanding, this should be pretty simple so I&amp;rsquo;m going to put that theory to the test.
Firstly! We&amp;rsquo;re going to use a Node.js scaffold that I covered off in a previous posting as our backend for this app.</description></item><item><title>Learning React with create-react-app</title><link>/learning-react-with-create-react-app/</link><pubDate>Fri, 17 Aug 2018 20:34:30 +0000</pubDate><guid>/learning-react-with-create-react-app/</guid><description>I&amp;rsquo;m an Angular kind of guy.
I&amp;rsquo;ve built several front end applications using Angular 1.x and 2+. I&amp;rsquo;ve built hybrid mobile apps using the Ionic Framework. In this time, I seem to have just completely ignored the phenomenon that is React js. There are so many frameworks that I&amp;rsquo;ve not even touched but if any of the job postings I&amp;rsquo;m seeing are an indication, the appetite for React and React Native developers is increasing rapidly.</description></item><item><title>Learning Go - Morse Code!</title><link>/morse-code-in-go/</link><pubDate>Wed, 15 Aug 2018 02:52:19 +0000</pubDate><guid>/morse-code-in-go/</guid><description>I was watching Churchill&amp;rsquo;s secret agents on Netflix the other day
When all of a sudden I got a hit of nostalgia when they got to the portion on morse code. Such an ingenious little method of communcation that I still, to this day, couldn&amp;rsquo;t follow for the life of me! I took a class on encryption and one of the first concepts they spoke of was morse code. Taking language and transcribing it into a not-so-easy to decipher combination of beeps and blips to send messages over a wire.</description></item><item><title>Async / Await in Node.js</title><link>/async-await-in-node-js/</link><pubDate>Thu, 31 May 2018 01:35:29 +0000</pubDate><guid>/async-await-in-node-js/</guid><description>The Async / Await functionality introduced into Node.js in v7.10.0 is legitimately a godsend. The Async / Await paradigm works with promises to do exactly what the paradigm implies. It will asynchronously call the function and await it&amp;rsquo;s response before continuing on with the rest of the function. Previously, you could do this with promise chaining. Passing results from one promise to the next. Where this issue fell apart is when you needed to use the result of Promise 1 in Promise 4.</description></item><item><title>My Concept2 Model D - Let's get after it!</title><link>/my-concept2-model-d-lets-get-after-it/</link><pubDate>Wed, 23 May 2018 23:26:35 +0000</pubDate><guid>/my-concept2-model-d-lets-get-after-it/</guid><description>In February 2018, I received a service award from work and decided that I would use it to purchase a cardio machine of some sort for my basement gym. I used to go the the gym at my work all the time but once I had a child and my wife returned back to work after mat leave, that option had fallen by the wayside real quick!
I applaud those who can get themselves out of bed after only four hours of sleep.</description></item><item><title>Yet Another Stateless Authentication Blog Post for the MEAN stack.</title><link>/yet-another-stateless-authentication-blog-post-for-the-mean-stack/</link><pubDate>Sat, 05 May 2018 03:32:35 +0000</pubDate><guid>/yet-another-stateless-authentication-blog-post-for-the-mean-stack/</guid><description>#inb4: this ain&amp;rsquo;t new.
I&amp;rsquo;m writing this for everyone that wants a slightly more organized approach to express middleware and authentication. I&amp;rsquo;m writing this because once again I was inspired by how much I adore Node, Express, and all the delights that come from being able to implement my API&amp;rsquo;s and leverage middlewares. Also, I&amp;rsquo;m using async / await, which is pretty neat.
I&amp;rsquo;m going to use MongoDB as a datastore it just jives so well with Node.</description></item><item><title>Why your IT friends are always grumpy</title><link>/why-your-it-friends-are-always-grumpy/</link><pubDate>Sat, 21 Apr 2018 01:28:28 +0000</pubDate><guid>/why-your-it-friends-are-always-grumpy/</guid><description>Humor me for a second here.
It might just be my company - but I doubt it. Watching VLOGs you see lots of developers that have some common traits:
Tired all the time Sarcastic AF Refusal to help you fix your PC at family dinners The meme&amp;rsquo;s are endless. Note: Google Images stopped letting me follow links here so I&amp;rsquo;ll have to revisit it. As if to prove the point of my post.</description></item><item><title>I got my PMP! With other random thoughts.</title><link>/i-got-my-pmp-with-other-random-thoughts/</link><pubDate>Tue, 27 Feb 2018 05:29:13 +0000</pubDate><guid>/i-got-my-pmp-with-other-random-thoughts/</guid><description>FINALLY! I&amp;rsquo;ve mentioned it in previous articles but I&amp;rsquo;ve finally done it. I got my PMP. The whole process really highlighted a few personality traits that I&amp;rsquo;ve developed at recently in my life. They&amp;rsquo;re essentially as follows:
I pursue so many things in an effort to claim that I&amp;rsquo;m too busy. I hate.. hate failing I have too many ideas Since starting down my career path, I&amp;rsquo;ve made some massive changes to my demeanour.</description></item><item><title>&lt;Thoughts> Print vs Media - Hoof</title><link>/thought-how-im-anti-tech/</link><pubDate>Thu, 01 Feb 2018 00:15:35 +0000</pubDate><guid>/thought-how-im-anti-tech/</guid><description>TLDR; I learned to memorize by reading and writing paper content I learned to look up using digital content. I find myself continually using indexing and ctrl-f to find information in digital content whereas I actually read and commit to memory when I read physical text and write physical notes.
Lessons I learned once and apparently have forgotten since
Yep. Awkward, right?
Hear me out.
I&amp;rsquo;m studying for my PMP exam (finally) and up until now I&amp;rsquo;ve been using PDF&amp;rsquo;s and the like to read and jot down notes.</description></item><item><title>&lt;Thoughts> Keeping Myself Organized</title><link>/thoughts-keeping-myself-organized/</link><pubDate>Fri, 12 Jan 2018 02:11:57 +0000</pubDate><guid>/thoughts-keeping-myself-organized/</guid><description>My most productive months through 2017 Were from about July through to the middle of December. As I sit here in my office I wonder what happened? I&amp;rsquo;ve gone from completing real actionable items daily to feeling like I&amp;rsquo;m just spinning my tires again, but I&amp;rsquo;m definitely not. Since my first day back to work of 2018, I&amp;rsquo;ve successfully:
Implemented a prototype for a potential new internal project Furthermore I&amp;rsquo;ve had 1 sit-down meeting to demo the application sprints and 3 meaningful conversations around alignment of the processes we&amp;rsquo;re looking to automate.</description></item><item><title>A Huzzah to Millennials killing everything - By a Millennial</title><link>/a-huzzah-to-millennials-killing-everything-by-a-millennial/</link><pubDate>Tue, 22 Aug 2017 21:44:14 +0000</pubDate><guid>/a-huzzah-to-millennials-killing-everything-by-a-millennial/</guid><description>I had an article pushed to me by LinkedIn from Business Insider titled:
###&amp;lsquo;Psychologically scarred&amp;rsquo; millennials are killing countless industries from napkins to Applebee&amp;rsquo;s â here are the businesses they like the least
I wanted to go through their list and put a bit of dialogue around a Canadian&amp;rsquo;s perspective on all these alleged failures. (Yep, Dialogue. We have French in our English). You can see the original article here.</description></item><item><title>My Dive into Neo4j - and my PMP</title><link>/my-dive-into-neo4j-and-my-pmp/</link><pubDate>Fri, 26 May 2017 01:27:28 +0000</pubDate><guid>/my-dive-into-neo4j-and-my-pmp/</guid><description>Man, I need to get my life figured out!
I spend so much of my free time diving into new technology that I&amp;rsquo;m just waiting for my wife to pull the pin. Sorry dearest! The nerdom never dies!
I just finished my application for my PMP exam (Project Management Professional - shameless self plug) and it was accepted. So once I scrounge up some dough I&amp;rsquo;ll be paying to take the test and then we are off to the races!</description></item><item><title>Windows, NodeJS, and node-gyp. The Battle and the Conquest</title><link>/perils-with-node-gyp-and-windows-development/</link><pubDate>Fri, 10 Apr 2015 05:04:49 +0000</pubDate><guid>/perils-with-node-gyp-and-windows-development/</guid><description>Update!
It has been brought to my attention that there is a another way to fix this solution that seems a bit simpler than my original approach. See the comments from Cees Timmerman and Mark Pinder in the comments.
Step 1: Install Visual Studio community edition (2015 seems to be tried, tested and true). Ensure that you do a custom install and include the C++ components.
Step 2: rebuild node-gyp using the following:</description></item><item><title>Installing Node without Sudo - Ubuntu 14.04 LTS</title><link>/installing-node-without-sudo/</link><pubDate>Wed, 08 Apr 2015 03:42:01 +0000</pubDate><guid>/installing-node-without-sudo/</guid><description>If you&amp;rsquo;re unlike me and really don&amp;rsquo;t care about superuser permissions or having the most up-to-date releases, you can just do the regular old naive thing and use the package manager&amp;hellip;
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install nodejs However since you&amp;rsquo;re here, I&amp;rsquo;m betting this doesn&amp;rsquo;t jive with you.
The idea of having to give checked out source code from the npm repository super user access makes me quite uncomfortable.</description></item></channel></rss>